{"version":3,"file":"static/js/313.78b46234.chunk.js","mappings":"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","sources":["helpers/api.js","components/CardOfFilm/CardOfFilm.styled.js","components/CardOfFilm/CardOfFilm.jsx","components/AdditionalInformation/AdditionalInformation.styled.js","components/AdditionalInformation/AdditionalInformation.jsx","pages/MovieDetails/MovieDetails.jsx","pages/NotFound/NotFound.styled.js","pages/NotFound/NotFound.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nconst KEY = 'd28f3e0fb4d925d2e7ab6a551bbf47ba';\nconst params = {\n  api_key: KEY,\n};\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchListOfFilms = async url => {\n  try {\n    const response = await axios\n      .get(url, { params })\n      .then(({ data: { results } }) => {\n        const normalizedResults = results.map(\n          ({ title, name, id, poster_path }) => {\n            return {\n              title: title ? title : name,\n              img: `https://www.themoviedb.org/t/p/original/${poster_path}`,\n              id,\n            };\n          }\n        );\n        return normalizedResults;\n      });\n\n    return response;\n  } catch ({ message }) {\n    toast.error('Oups! Something is going wrong... Please try later :(');\n    // console.error(message);\n  }\n};\nexport const fetchMovieDetails = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}`, { params })\n      .then(\n        ({\n          data: {\n            title,\n            name,\n            release_date,\n            genres,\n            overview,\n            vote_average,\n            id,\n            backdrop_path,\n          },\n        }) => {\n          const normalizedResults = {\n            title: title ? title : name,\n            img: backdrop_path\n              ? `https://www.themoviedb.org/t/p/original/${backdrop_path}`\n              : `https://otv.one/uploads/default_image/thumbnail.jpg`,\n            overview: overview ? overview : 'no information about overview',\n            scores: (vote_average * 10).toFixed(2),\n            data: new Date(release_date).getFullYear(),\n            genres: genres\n              ? genres.map(genre => genre.name).join(', ')\n              : 'no information about genres',\n            id,\n          };\n          return normalizedResults;\n        }\n      );\n    return response;\n  } catch ({ message }) {\n    // console.error(message);\n    toast.error(\"We can't find information of the film\");\n  }\n};\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/credits`, { params })\n      .then(({ data: { cast } }) =>\n        cast.map(({ name, character, profile_path, id }) => {\n          return {\n            name,\n            character,\n            img: profile_path\n              ? `https://www.themoviedb.org/t/p/original/${profile_path}`\n              : `https://otv.one/uploads/default_image/thumbnail.jpg`,\n            id,\n          };\n        })\n      );\n    return response;\n  } catch ({ message }) {\n    // console.error(message);\n    toast.error('Oups! Something is going wrong... Please try later :(');\n  }\n};\nexport const fetchMovieReviews = async id => {\n  try {\n    const response = await axios\n      .get(`/movie/${id}/reviews`, { params })\n      .then(({ data: { results } }) =>\n        results.map(({ author, content, created_at, updated_at, id }) => {\n          return {\n            author,\n            content,\n            created_at,\n            updated_at,\n            id,\n          };\n        })\n      );\n    return response;\n  } catch ({ message }) {\n    // console.error(message);\n    toast.error('Oups! Something is going wrong... Please try later :(');\n  }\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const StyledLinkToBack = styled(Link)`\n  display: inline-block;\n  margin-bottom: 40px;\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n`;\n\nexport const CardImgWrap = styled.div`\n  display: flex;\n  width: 100%;\n  gap: 30px;\n`;\n\nexport const DetailsWrap = styled.div`\n  width: 100%;\n  /* display: flex; */\n`;\n\nexport const CardImg = styled.img`\n  width: 50%;\n  object-fit: cover;\n`;\n\nexport const CardTitle = styled.div`\n  font-size: 50px;\n`;\n\nexport const StyledParagraph = styled.p`\n  text-indent: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { TiArrowBack } from 'react-icons/ti';\nimport {\n  CardImg,\n  CardImgWrap,\n  DetailsWrap,\n  StyledLinkToBack,\n  CardTitle,\n  StyledParagraph,\n} from 'components/CardOfFilm/CardOfFilm.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst CardOfFilm = ({ movieDetails }) => {\n  const location = useLocation();\n  const { img, title, data, scores, overview, genres } = movieDetails;\n  const backdropRef = location.state?.from ?? '/';\n  return (\n    <div>\n      <StyledLinkToBack to={backdropRef}>\n        <TiArrowBack /> Go back\n      </StyledLinkToBack>\n      <DetailsWrap>\n        <CardImgWrap>\n          <CardImg src={img} alt={title} loading=\"lazy\" />\n          <CardTitle className=\"title\">\n            <h2>\n              {title} ({data})\n            </h2>\n            <p>User score: {scores}%</p>\n          </CardTitle>\n        </CardImgWrap>\n\n        <div className=\"details-information\">\n          <h3 className=\"subtitle\">Overview</h3>\n          <StyledParagraph>{overview}</StyledParagraph>\n          <h3 className=\"subtitle\">Genres</h3>\n          <StyledParagraph>{genres}</StyledParagraph>\n        </div>\n      </DetailsWrap>\n    </div>\n  );\n};\n\nCardOfFilm.propTypes = {\n  movieDetails: PropTypes.exact({\n    img: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    data: PropTypes.number.isRequired,\n    scores: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default CardOfFilm;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const LinkToInfo = styled(Link)`\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n`;\n","import { VscPreview } from 'react-icons/vsc';\nimport { MdRecentActors } from 'react-icons/md';\n\nimport { LinkToInfo } from './AdditionalInformation.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst AdditionalInformation = () => {\n  const location = useLocation();\n  const backdropRef = location.state?.from ?? '/';\n  return (\n    <>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <LinkToInfo to=\"cast\" state={{ from: backdropRef }}>\n            <MdRecentActors /> Cast\n          </LinkToInfo>\n        </li>\n        <li>\n          <LinkToInfo to=\"reviews\" state={{ from: backdropRef }}>\n            <VscPreview /> Reviews\n          </LinkToInfo>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default AdditionalInformation;\n","import { Outlet, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'helpers/api';\nimport { useEffect, useState } from 'react';\nimport NotFound from 'pages/NotFound/NotFound';\nimport CardOfFilm from 'components/CardOfFilm/CardOfFilm';\nimport AdditionalInformation from 'components/AdditionalInformation/AdditionalInformation';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isNotFoundShown, setIsNotFoundShown] = useState(false);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    fetchMovieDetails(Number(movieId)).then(response => {\n      if (!response) {\n        setIsNotFoundShown(true);\n        return;\n      }\n      setMovieDetails(response);\n      setIsNotFoundShown(false);\n    });\n  }, [movieId]);\n  if (movieDetails) {\n    return (\n      <>\n        <CardOfFilm movieDetails={movieDetails} />\n        <AdditionalInformation />\n        <Outlet />\n      </>\n    );\n  } else {\n    return isNotFoundShown && <NotFound />;\n  }\n};\n\nexport default MovieDetails;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NotFoundConteiner = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f5f5f5;\n  font-family: sans-serif;\n`;\n\nexport const NotFoundTitle = styled.h1`\n  font-size: 8rem;\n  margin: 0;\n`;\nexport const NotFoundContent = styled.p`\n  font-size: 2rem;\n  margin: 0;\n  margin-bottom: 2rem;\n`;\n\nexport const NotFoundBtn = styled(NavLink)`\n  padding: 1rem 2rem;\n  font-size: 1.5rem;\n  border: none;\n  border-radius: 5px;\n  color: #fff;\n  background-color: #007bff;\n  text-decoration: none;\n  transition: background-color 0.2s ease-in-out;\n  &:hover {\n    background-color: #0069d9;\n  }\n`;\n","import { useNavigate } from 'react-router-dom';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  NotFoundConteiner,\n  NotFoundTitle,\n  NotFoundContent,\n  NotFoundBtn,\n} from 'pages/NotFound/NotFound.styled';\nimport { useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nconst NotFound = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    let counter = 3;\n    const backToHomeId = setInterval(() => {\n      if (counter <= 0) {\n        clearInterval(backToHomeId);\n        navigate('/', { replace: true });\n      } else {\n        toast(`You'll be transferred to Home page in ${counter} seconds`, {\n          autoClose: 1000,\n        });\n      }\n      counter -= 1;\n    }, 2000);\n    return () => clearInterval(backToHomeId);\n  }, [navigate]);\n\n  return (\n    <>\n      <NotFoundConteiner>\n        <NotFoundTitle>404</NotFoundTitle>\n        <NotFoundContent>\n          Oops! The page you are looking for cannot be found.\n        </NotFoundContent>\n        <NotFoundBtn to=\"/\">Go Home</NotFoundBtn>\n      </NotFoundConteiner>\n    </>\n  );\n};\n\nexport default NotFound;\n"],"names":["params","api_key","axios","fetchListOfFilms","url","then","data","results","map","title","name","id","poster_path","img","response","message","toast","fetchMovieDetails","release_date","genres","overview","vote_average","backdrop_path","scores","toFixed","Date","getFullYear","genre","join","fetchMovieCast","cast","character","profile_path","fetchMovieReviews","author","content","created_at","updated_at","StyledLinkToBack","styled","Link","CardImgWrap","DetailsWrap","CardImg","CardTitle","StyledParagraph","movieDetails","location","useLocation","backdropRef","state","from","to","src","alt","loading","className","LinkToInfo","useState","setMovieDetails","isNotFoundShown","setIsNotFoundShown","movieId","useParams","useEffect","Number","NotFound","NotFoundConteiner","NotFoundTitle","NotFoundContent","NotFoundBtn","NavLink","navigate","useNavigate","counter","backToHomeId","setInterval","clearInterval","replace","autoClose"],"sourceRoot":""}